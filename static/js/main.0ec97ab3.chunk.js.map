{"version":3,"sources":["quotes.js","components/Quote/index.js","components/Quote/Quote.js","pages/QuotesPage.page.js","App.js","reportWebVitals.js","index.js"],"names":["data","frase","author","Quote","useState","quote","setQuote","setAuthor","useEffect","getQuote","dataQuotes","randomQuote","Math","floor","random","length","id","className","onClick","href","target","QuotesPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAaA,EAAO,CAClB,CACEC,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,YAEV,CACED,MAAO,cACPC,OAAQ,aAEV,CACED,MAAO,cACPC,OAAQ,aAEV,CACED,MAAO,cACPC,OAAQ,c,OC5CGC,MCAA,WAAkB,IAAD,EACJC,mBAAS,IADL,mBACvBC,EADuB,KAChBC,EADgB,OAEFF,mBAAS,IAFP,mBAEvBF,EAFuB,KAEfK,EAFe,KAI9BC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAW,WACf,IAAIC,EAAaV,EAEbW,EAAcD,EADFE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWK,SAGtDT,EAASK,EAAYV,OACrBM,EAAUI,EAAYT,SAOxB,OACE,0BAASc,GAAG,YAAZ,UACE,qBAAKA,GAAG,OAAR,SACE,6BAAKX,MAEP,qBAAKW,GAAG,SAAR,SACE,4BAAId,MAEN,wBAAQc,GAAG,YAAYC,UAAU,kBAAkBC,QAZnC,WAClBT,KAWE,uBAGA,mBAAGU,KAAK,2BAA2BH,GAAG,cAAcI,OAAO,SAA3D,6BClCS,SAASC,IACtB,OACE,qBAAKJ,UAAU,mBAAf,SACE,cAAC,EAAD,MCESK,MAJf,WACE,OAAO,cAACD,EAAD,KCSME,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0ec97ab3.chunk.js","sourcesContent":["export const data = [\n  {\n    frase: \"bla bla bla\",\n    author: \"author 1\",\n  },\n  {\n    frase: \"ble ble ble\",\n    author: \"author 2\",\n  },\n  {\n    frase: \"bli bli bli\",\n    author: \"author 3\",\n  },\n  {\n    frase: \"blo blo blo\",\n    author: \"author 4\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 5\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 6\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 7\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 8\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 9\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 10\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 11\",\n  },\n  {\n    frase: \"blu blu blu\",\n    author: \"author 12\",\n  },\n];\n","import { QuotesPage } from \"../../pages\";\nimport Quote from \"./Quote\";\n\nexport default Quote;\n","import React, { useState, useEffect } from \"react\";\nimport { data } from \"../../quotes\";\n\nexport default function Quote() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  const getQuote = () => {\n    let dataQuotes = data;\n    let randomNum = Math.floor(Math.random() * dataQuotes.length);\n    let randomQuote = dataQuotes[randomNum];\n\n    setQuote(randomQuote.frase);\n    setAuthor(randomQuote.author);\n  };\n\n  const handleClick = () => {\n    getQuote();\n  };\n\n  return (\n    <wrapper id=\"quote-box\">\n      <div id=\"text\">\n        <h3>{quote}</h3>\n      </div>\n      <div id=\"author\">\n        <p>{author}</p>\n      </div>\n      <button id=\"new-quote\" className=\"btn btn-primary\" onClick={handleClick}>\n        New Quote\n      </button>\n      <a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\" target=\"_blank\">\n        Tweet Quote\n      </a>\n    </wrapper>\n  );\n}\n","import Quote from \"../components/Quote\";\nexport default function QuotesPage() {\n  return (\n    <div className=\"text-center mt-5\">\n      <Quote />\n    </div>\n  );\n}\n","import { QuotesPage } from \"./pages\";\n\nfunction App() {\n  return <QuotesPage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}